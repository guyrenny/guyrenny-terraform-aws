name: Terraform Testing

on:
  push:
    branches-ignore: [master]
    paths:
      - "modules/**"
  pull_request:
    types: [closed]
    branches: [master]
    paths:
      - "modules/**"

jobs:
          
  check:
    name: Check
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.get-changed-packages.outputs.packages }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Get Changed Packages
        id: get-changed-packages
        run: |
          export PACKAGES=$(git diff --name-only --diff-filter=d ${{ github.event.pull_request.base.sha || 'origin/master' }} ${{ github.sha }} modules/ | xargs -n1 dirname | sed -r 's/modules\/([^\/]+).*$/modules\/\1/g' | xargs -n1 basename | sort | uniq | jq -rcnR '[inputs]')
          
          echo "packages=$PACKAGES" >> $$GITHUB_OUTPUT
          echo $packages
          echo "::set-output name=packages::$PACKAGES"
          
          
      - name: echo
        run:  echo ${{ env.action_state }} 

  validate:
    name: Validate
    runs-on: ubuntu-latest
    needs: check
    strategy:
      fail-fast: false
      matrix:
        package: ${{ fromJSON(needs.check.outputs.packages) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Configure AWS credentials
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS_KEY }}
        run: |
          echo "AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}" >> $GITHUB_ENV
          
      - name: terraform fmt
        uses: dflook/terraform-fmt@v1
        with:
          path: modules/${{ matrix.package }}/
          
      - name: Terraform Init
        run: terraform init
        working-directory: tests/${{ matrix.package }}
          
      - name: Terraform validate
        run: terraform validate
        working-directory: tests/${{ matrix.package }}
      
      - name: Terraform Plan
        run:  terraform plan
        working-directory: tests/${{ matrix.package }}
        
