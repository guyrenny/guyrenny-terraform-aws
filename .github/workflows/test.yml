name: Terraform Testing

on:
  push:
    branches-ignore: [master]
  pull_request:
    types: [closed]
    branches: [master]
    paths: 
      - "modules/**"

jobs:
 
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        
      - name: Configure AWS credentials
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS_KEY }}
        run: |
          echo "AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}" >> $GITHUB_ENV

          
      - uses: Stockopedia/action-get-changed-files@v1
        id: get_changed
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          ignore: "**/+(.github)"
          foldersOnly: false 
          format: csv
          
      - name: get the values
        id: get
        run: |
          IFS=', ' read -r -a array <<< ${{ steps.get_changed.outputs.changed }}
          echo "action_state=${array}" >> $GITHUB_ENV
          
      - name: test eacho
        id: array
        run: |
          echo ${{ env.action_state }}
          
      - name: Get Changed Packages
        id: get-changed-packages
        run: |
          export PACKAGES=$(git diff --name-only --diff-filter=d ${{ github.event.pull_request.base.sha || 'origin/master' }} ${{ github.sha }} src/ | xargs -n1 dirname | sed -r 's/src\/([^\/]+).*$/src\/\1/g' | xargs -n1 basename | sort | uniq | jq -rcnR '[inputs]')
          echo "::set-output name=packages::$PACKAGES"
          echo $PACKAGES ; $packages
        
    outputs: 
      array: ${{ env.myArray }}
      
          
  validate:
      needs: test
      runs-on: ubuntu-latest
      strategy:
        matrix:
          package: ${{ fromJSON(needs.test.outputs.packages) }}
      steps:
      - name: test eacho
        run: echo ${{needs.test.outputs.array}}
        
      - name: terraform fmt
        uses: dflook/terraform-fmt@v1
        with:
          path: ${{ matrix.package }}/
          
      - name: Terraform Init
        run: terraform init
        working-directory: tests/${{ steps.step_one.outputs.action_state }}
          
      - name: Terraform validate
        run: terraform validate
        working-directory: tests/${{ steps.step_one.outputs.action_state }}
      
      - name: Terraform Plan
        run:  terraform plan
        working-directory: tests/${{ steps.step_one.outputs.action_state }}
        
