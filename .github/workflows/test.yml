name: Terraform Testing

on:
  push:
    branches:
      - master
    paths: 
      - "modules/**"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        
      - name: Configure AWS credentials
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS_KEY }}
        run: |
          echo "AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}" >> $GITHUB_ENV

          
      - uses: Stockopedia/action-get-changed-files@v1
        id: get_changed
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          ignore: "**/+(.github)"
          foldersOnly: false 
          format: csv
          
      - name: get the values
        id: get
        run: |
          echo "action_state=$(echo "${{ steps.get_changed.outputs.changed }}" | sed 's|^\(modules/[^/]*\).*|\1|')" >> $GITHUB_ENV
          
      - name: Set the value
        id: step_one
        run: |
          export action_state=$(echo "${{ steps.get_changed.outputs.changed }}" )
          echo "::set-output name=action_state::$action_state"
          
      - name: echo1
        run: echo ${{ steps.step_one.outputs.action_state }}
        
      - name: echo
        run: |
          IFS=', ' read -r -a array <<< ${{ steps.step_one.outputs.action_state }}
          echo "::set-output name=array::$array
          echo ${array[*]}
          echo "changes=${array[*]}" >> $GITHUB_ENV
          echo ${{ env.changes }}
          
      - name: Define Matrix
        id: define_matrix
        run: |
          echo "::set-output name=matrix::$(echo "${{ steps.step_one.outputs.array }}" | tr ',' '\n')"

  validate:
      runs-on: ubuntu-latest
      strategy:
        fail-fast: false
        matrix:
          package: fromJson${{ env.changes }}
      steps:
      
      - name: terraform fmt
        uses: dflook/terraform-fmt@v1
        with:
          path: ${{ matrix.package }}/
          
      - name: Terraform Init
        run: terraform init
        working-directory: tests/${{ steps.step_one.outputs.action_state }}
          
      - name: Terraform validate
        run: terraform validate
        working-directory: tests/${{ steps.step_one.outputs.action_state }}
      
      - name: Terraform Plan
        run:  terraform plan
        working-directory: tests/${{ steps.step_one.outputs.action_state }}
        
